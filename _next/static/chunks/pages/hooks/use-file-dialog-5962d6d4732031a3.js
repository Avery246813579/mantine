(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[42172],{69061:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-file-dialog",function(){return n(41681)}])},41681:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>u});var i=n(31085),l=n(71184),r=n(40691),o=n(85954),s=n(38215);let a=(0,o.P)(s.XZ.useFileDialog);function c(e){let t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components},{Demo:n}=t;return n||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"use-file-dialog"})," allows capturing one or more files from the user\nwithout file input element:"]}),"\n",(0,i.jsx)(n,{data:r.b}),"\n",(0,i.jsx)(t.h2,{id:"hook-options",children:"Hook options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"interface UseFileDialogOptions {\n  /** Determines whether multiple files are allowed, `true` by default */\n  multiple?: boolean;\n\n  /** `accept` attribute of the file input, '*' by default */\n  accept?: string;\n\n  /** `capture` attribute of the file input */\n  capture?: string;\n\n  /** Determines whether the user can pick a directory instead of file, `false` by default */\n  directory?: boolean;\n\n  /** Determines whether the file input state should be reset when the file dialog is opened, `false` by default */\n  resetOnOpen?: boolean;\n\n  /** Initial selected files */\n  initialFiles?: FileList | File[];\n\n  /** Called when files are selected */\n  onChange?: (files: FileList | null) => void;\n\n  /** Called when file dialog is canceled */\n  onCancel?: () => void;\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"function useFileDialog(input?: UseFileDialogOptions): {\n    files: FileList | null;\n    open: () => void;\n    reset: () => void;\n}\n"})})]})}function u(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})})}},40691:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var i=n(31085),l=n(17592),r=n(56051),o=n(52022),s=n(14041),a=n(89571);let c={multiple:!0,accept:"*"},u={type:"code",component:function(){let e=function(e={}){let t={...c,...e},[n,i]=(0,s.useState)(function(e){if(!e)return null;if(e instanceof FileList)return e;let t=new DataTransfer;for(let n of e)t.items.add(n);return t.files}(t.initialFiles)),l=(0,s.useRef)(null),r=(0,s.useCallback)(e=>{let n=e.target;n?.files&&(i(n.files),t.onChange?.(n.files))},[t.onChange]),o=(0,s.useCallback)(()=>{l.current?.remove(),l.current=function(e){if("undefined"==typeof document)return null;let t=document.createElement("input");return t.type="file",e.accept&&(t.accept=e.accept),e.multiple&&(t.multiple=e.multiple),e.capture&&(t.capture=e.capture),e.directory&&(t.webkitdirectory=e.directory),t.style.display="none",t}(t),l.current&&(l.current.addEventListener("change",r,{once:!0}),document.body.appendChild(l.current))},[t,r]);(0,a.o)(()=>(o(),()=>l.current?.remove()),[]);let u=(0,s.useCallback)(()=>{i(null),t.onChange?.(null)},[t.onChange]);return{files:n,open:(0,s.useCallback)(()=>{t.resetOnOpen&&u(),o(),l.current?.click()},[t.resetOnOpen,u,o]),reset:u}}(),t=Array.from(e.files||[]).map(e=>(0,i.jsx)(l.B.Item,{children:e.name},e.name));return(0,i.jsxs)("div",{children:[(0,i.jsxs)(r.Y,{children:[(0,i.jsx)(o.$,{onClick:e.open,children:"Pick files"}),t.length>0&&(0,i.jsx)(o.$,{variant:"default",onClick:e.reset,children:"Reset"})]}),t.length>0&&(0,i.jsx)(l.B,{mt:"lg",children:t})]})},code:`
import { Button, Group, List } from '@mantine/core';
import { useFileDialog } from '@mantine/hooks';

function Demo() {
  const fileDialog = useFileDialog();

  const pickedFiles = Array.from(fileDialog.files || []).map((file) => (
    <List.Item key={file.name}>{file.name}</List.Item>
  ));

  return (
    <div>
      <Group>
        <Button onClick={fileDialog.open}>Pick files</Button>
        {pickedFiles.length > 0 && (
          <Button variant="default" onClick={fileDialog.reset}>
            Reset
          </Button>
        )}
      </Group>
      {pickedFiles.length > 0 && <List mt="lg">{pickedFiles}</List>}
    </div>
  );
}
`}},17592:(e,t,n)=>{"use strict";n.d(t,{B:()=>b});var i=n(31085);n(14041);var l=n(33450),r=n(7098),o=n(29686),s=n(69564),a=n(34056),c=n(6754);let[u,d]=(0,n(59852).F)("List component was not found in tree");var p={root:"m_abbac491",item:"m_abb6bec2",itemWrapper:"m_75cd9f71",itemIcon:"m_60f83e5b"};let f={},m=(0,c.P9)((e,t)=>{let{classNames:n,className:l,style:r,styles:s,vars:c,icon:u,children:p,mod:m,...h}=(0,o.Y)("ListItem",f,e),g=d(),b=u||g.icon,y={classNames:n,styles:s};return(0,i.jsx)(a.a,{...g.getStyles("item",{...y,className:l,style:r}),component:"li",mod:[{"with-icon":!!b,centered:g.center},m],ref:t,...h,children:(0,i.jsxs)("div",{...g.getStyles("itemWrapper",y),children:[b&&(0,i.jsx)("span",{...g.getStyles("itemIcon",y),children:b}),(0,i.jsx)("span",{...g.getStyles("itemLabel",y),children:p})]})})});m.classes=p,m.displayName="@mantine/core/ListItem";let h={type:"unordered"},g=(0,r.V)((e,{size:t,spacing:n})=>({root:{"--list-fz":(0,l.ny)(t),"--list-lh":(0,l.ks)(t),"--list-spacing":(0,l.GY)(n)}})),b=(0,c.P9)((e,t)=>{let n=(0,o.Y)("List",h,e),{classNames:l,className:r,style:c,styles:d,unstyled:f,vars:m,children:b,type:y,withPadding:k,icon:x,spacing:j,center:v,listStyleType:w,mod:C,...F}=n,D=(0,s.I)({name:"List",classes:p,props:n,className:r,style:c,classNames:l,styles:d,unstyled:f,vars:m,varsResolver:g});return(0,i.jsx)(u,{value:{center:v,icon:x,getStyles:D},children:(0,i.jsx)(a.a,{...D("root",{style:{listStyleType:w}}),component:"unordered"===y?"ul":"ol",mod:[{"with-padding":k},C],ref:t,...F,children:b})})});b.classes=p,b.displayName="@mantine/core/List",b.Item=m}},e=>{var t=t=>e(e.s=t);e.O(0,[67456,39699,68831,90636,46593,38792],()=>t(69061)),_N_E=e.O()}]);